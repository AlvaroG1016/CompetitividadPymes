// <auto-generated />
using System;
using CompetitividadPymes.Models.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CompetitividadPymes.Migrations
{
    [DbContext(typeof(PymesCompetitividadContext))]
    partial class PymesCompetitividadContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CompetitividadPymes.Models.Domain.CaracterizacionEmpresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ClasificacionEmpresa")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("IdEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("id_empresa");

                    b.Property<string>("NombreEmpresa")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TiempoMercado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "IdEmpresa" }, "UQ_CaracterizacionEmpresa_IdEmpresa")
                        .IsUnique();

                    b.ToTable("Caracterizacion_Empresa", (string)null);
                });

            modelBuilder.Entity("CompetitividadPymes.Models.Domain.CaracterizacionUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Antiguedad")
                        .HasColumnType("int");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("EmailInstitucional")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmailPersonal")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("IdEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("id_empresa");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "IdEmpresa" }, "UQ_CaracterizacionUsuario_IdEmpresa")
                        .IsUnique();

                    b.ToTable("Caracterizacion_Usuario", (string)null);
                });

            modelBuilder.Entity("CompetitividadPymes.Models.Domain.DocumentoEvidencium", b =>
                {
                    b.Property<int>("IdDocumento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_documento");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDocumento"));

                    b.Property<byte[]>("Archivo")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("archivo");

                    b.Property<int?>("IdEncuesta")
                        .HasColumnType("int")
                        .HasColumnName("id_encuesta");

                    b.Property<int?>("IdFactor")
                        .HasColumnType("int")
                        .HasColumnName("id_factor");

                    b.Property<string>("TipoDocumento")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("tipo_documento");

                    b.HasKey("IdDocumento")
                        .HasName("PK__Document__5D2EE7E503F5FFDF");

                    b.HasIndex("IdEncuesta");

                    b.HasIndex("IdFactor");

                    b.ToTable("Documento_Evidencia", (string)null);
                });

            modelBuilder.Entity("CompetitividadPymes.Models.Domain.Empresa", b =>
                {
                    b.Property<int>("IdEmpresa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_empresa");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEmpresa"));

                    b.Property<string>("Clasificacion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("clasificacion");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("estado");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_registro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("nombre");

                    b.Property<string>("Sector")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("sector");

                    b.HasKey("IdEmpresa")
                        .HasName("PK__Empresa__4A0B7E2CA0ED448C");

                    b.ToTable("Empresa", (string)null);
                });

            modelBuilder.Entity("CompetitividadPymes.Models.Domain.Encuestum", b =>
                {
                    b.Property<int>("IdEncuesta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_encuesta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEncuesta"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("estado");

                    b.Property<DateTime?>("FechaAplicacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_aplicacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdCarEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("id_carEmpresa");

                    b.Property<int>("IdCarUsuario")
                        .HasColumnType("int")
                        .HasColumnName("id_carUsuario");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("id_empresa");

                    b.Property<decimal?>("PuntajeTotal")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("puntaje_total");

                    b.HasKey("IdEncuesta")
                        .HasName("PK__Encuesta__013535C336F2E942");

                    b.HasIndex("IdCarEmpresa");

                    b.HasIndex("IdCarUsuario");

                    b.HasIndex("IdEmpresa");

                    b.ToTable("Encuesta");
                });

            modelBuilder.Entity("CompetitividadPymes.Models.Domain.Factor", b =>
                {
                    b.Property<int>("IdFactor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_factor");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFactor"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("descripcion");

                    b.Property<string>("DisponibleEnPlanes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("disponible_en_planes");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("nombre");

                    b.Property<decimal>("Peso")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("peso");

                    b.HasKey("IdFactor")
                        .HasName("PK__Factor__FEAFF024B3079CD3");

                    b.ToTable("Factor", (string)null);
                });

            modelBuilder.Entity("CompetitividadPymes.Models.Domain.OrdenPago", b =>
                {
                    b.Property<int>("IdOrdenPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_orden_pago");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOrdenPago"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("estado");

                    b.Property<DateTime?>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_creacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FechaPago")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_pago");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("id_empresa");

                    b.Property<int>("IdPlan")
                        .HasColumnType("int")
                        .HasColumnName("id_plan");

                    b.Property<string>("MetodoPago")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("metodo_pago");

                    b.Property<decimal>("MontoTotal")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("monto_total");

                    b.HasKey("IdOrdenPago")
                        .HasName("PK__Orden_Pa__83B3D784E7853E03");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdPlan");

                    b.ToTable("Orden_Pago", (string)null);
                });

            modelBuilder.Entity("CompetitividadPymes.Models.Domain.Permiso", b =>
                {
                    b.Property<int>("IdPermiso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_permiso");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPermiso"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.HasKey("IdPermiso")
                        .HasName("PK__Permiso__228F224F7310FC7C");

                    b.ToTable("Permiso", (string)null);
                });

            modelBuilder.Entity("CompetitividadPymes.Models.Domain.Plane", b =>
                {
                    b.Property<int>("IdPlan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_plan");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPlan"));

                    b.Property<string>("Caracteristicas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("caracteristicas");

                    b.Property<int>("DuracionMeses")
                        .HasColumnType("int")
                        .HasColumnName("duracion_meses");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("precio");

                    b.HasKey("IdPlan")
                        .HasName("PK__Plane__3901EAE39522BD96");

                    b.ToTable("Plane", (string)null);
                });

            modelBuilder.Entity("CompetitividadPymes.Models.Domain.Preguntum", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Enunciado")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("enunciado");

                    b.Property<int?>("IdVariable")
                        .HasColumnType("int")
                        .HasColumnName("id_variable");

                    b.Property<decimal>("Peso")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("peso");

                    b.HasKey("Id");

                    b.HasIndex("IdVariable");

                    b.ToTable("Pregunta");
                });

            modelBuilder.Entity("CompetitividadPymes.Models.Domain.Respuestum", b =>
                {
                    b.Property<int>("IdRespuesta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_respuesta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRespuesta"));

                    b.Property<int?>("IdEncuesta")
                        .HasColumnType("int")
                        .HasColumnName("id_encuesta");

                    b.Property<string>("IdPregunta")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("id_pregunta");

                    b.Property<int>("ValorRespuesta")
                        .HasColumnType("int")
                        .HasColumnName("valor_respuesta");

                    b.HasKey("IdRespuesta")
                        .HasName("PK__Respuest__14E55589160BC79F");

                    b.HasIndex("IdEncuesta");

                    b.HasIndex("IdPregunta");

                    b.ToTable("Respuesta");
                });

            modelBuilder.Entity("CompetitividadPymes.Models.Domain.ResultadoFactor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CantidadVariables")
                        .HasColumnType("int");

                    b.Property<decimal>("ContribucionFinal")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<DateTime?>("FechaCalculo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdEncuesta")
                        .HasColumnType("int");

                    b.Property<int>("IdFactor")
                        .HasColumnType("int");

                    b.Property<decimal>("PesoFactor")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<decimal>("PorcentajeFactor")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<decimal>("PuntajeMaximo")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("PuntajeObtenido")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id")
                        .HasName("PK__Resultad__3214EC077A6D99C6");

                    b.HasIndex("IdEncuesta");

                    b.HasIndex("IdFactor");

                    b.ToTable("ResultadoFactor", (string)null);
                });

            modelBuilder.Entity("CompetitividadPymes.Models.Domain.ResultadoVariable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ContribucionFinal")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<DateTime?>("FechaCalculo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdEncuesta")
                        .HasColumnType("int");

                    b.Property<int>("IdVariable")
                        .HasColumnType("int");

                    b.Property<decimal>("PesoVariable")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<decimal>("PorcentajeVariable")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<decimal>("PuntajeMaximo")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("PuntajeObtenido")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id")
                        .HasName("PK__Resultad__3214EC07B10F3B9D");

                    b.HasIndex("IdEncuesta");

                    b.HasIndex("IdVariable");

                    b.ToTable("ResultadoVariable", (string)null);
                });

            modelBuilder.Entity("CompetitividadPymes.Models.Domain.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_rol");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("descripcion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.HasKey("IdRol")
                        .HasName("PK__Rol__6ABCB5E02E36850F");

                    b.ToTable("Rol", (string)null);
                });

            modelBuilder.Entity("CompetitividadPymes.Models.Domain.Suscripcion", b =>
                {
                    b.Property<int>("IdSuscripcion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_suscripcion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSuscripcion"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("estado");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_fin");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_inicio");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("id_empresa");

                    b.Property<int?>("IdOrdenPago")
                        .HasColumnType("int")
                        .HasColumnName("id_orden_pago");

                    b.Property<int?>("IdPlan")
                        .HasColumnType("int")
                        .HasColumnName("id_plan");

                    b.HasKey("IdSuscripcion")
                        .HasName("PK__Suscripc__4E8926BB4EE5C716");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdOrdenPago");

                    b.HasIndex("IdPlan");

                    b.ToTable("Suscripcion", (string)null);
                });

            modelBuilder.Entity("CompetitividadPymes.Models.Domain.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("correo");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("estado");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_registro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("id_empresa");

                    b.Property<int>("IdRol")
                        .HasColumnType("int")
                        .HasColumnName("id_rol");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("nombre");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password");

                    b.Property<DateTime?>("UltimoAcceso")
                        .HasColumnType("datetime")
                        .HasColumnName("ultimo_acceso");

                    b.HasKey("IdUsuario")
                        .HasName("PK__Usuario__4E3E04ADC528991F");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdRol");

                    b.HasIndex(new[] { "Correo" }, "UQ__Usuario__2A586E0BB6EC9A03")
                        .IsUnique();

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("CompetitividadPymes.Models.Domain.Variable", b =>
                {
                    b.Property<int>("IdVariable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_variable");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVariable"));

                    b.Property<int?>("Cantidadpreguntas")
                        .HasColumnType("int")
                        .HasColumnName("cantidadpreguntas");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("descripcion");

                    b.Property<int>("IdFactor")
                        .HasColumnType("int")
                        .HasColumnName("id_factor");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("nombre");

                    b.Property<decimal>("Peso")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("peso");

                    b.HasKey("IdVariable")
                        .HasName("PK__Variable__99DC6B6499877C10");

                    b.HasIndex("IdFactor");

                    b.ToTable("Variable", (string)null);
                });

            modelBuilder.Entity("PermisoFactor", b =>
                {
                    b.Property<int>("IdRol")
                        .HasColumnType("int")
                        .HasColumnName("id_rol");

                    b.Property<int>("IdFactor")
                        .HasColumnType("int")
                        .HasColumnName("id_factor");

                    b.HasKey("IdRol", "IdFactor")
                        .HasName("PK__Permiso___35564AE277C415D4");

                    b.HasIndex("IdFactor");

                    b.ToTable("Permiso_Factor", (string)null);
                });

            modelBuilder.Entity("PermisoRol", b =>
                {
                    b.Property<int>("IdRol")
                        .HasColumnType("int")
                        .HasColumnName("id_rol");

                    b.Property<int>("IdPermiso")
                        .HasColumnType("int")
                        .HasColumnName("id_permiso");

                    b.HasKey("IdRol", "IdPermiso")
                        .HasName("PK__Permiso___889447C493BE42B2");

                    b.HasIndex("IdPermiso");

                    b.ToTable("Permiso_Rol", (string)null);
                });

            modelBuilder.Entity("CompetitividadPymes.Models.Domain.CaracterizacionEmpresa", b =>
                {
                    b.HasOne("CompetitividadPymes.Models.Domain.Empresa", "IdEmpresaNavigation")
                        .WithOne("CaracterizacionEmpresa")
                        .HasForeignKey("CompetitividadPymes.Models.Domain.CaracterizacionEmpresa", "IdEmpresa")
                        .IsRequired()
                        .HasConstraintName("FK_Caracterizacion_Empresa_Empresa");

                    b.Navigation("IdEmpresaNavigation");
                });

            modelBuilder.Entity("CompetitividadPymes.Models.Domain.CaracterizacionUsuario", b =>
                {
                    b.HasOne("CompetitividadPymes.Models.Domain.Empresa", "IdEmpresaNavigation")
                        .WithOne("CaracterizacionUsuario")
                        .HasForeignKey("CompetitividadPymes.Models.Domain.CaracterizacionUsuario", "IdEmpresa")
                        .IsRequired()
                        .HasConstraintName("FK_Caracterizacion_Usuario_Empresa");

                    b.Navigation("IdEmpresaNavigation");
                });

            modelBuilder.Entity("CompetitividadPymes.Models.Domain.DocumentoEvidencium", b =>
                {
                    b.HasOne("CompetitividadPymes.Models.Domain.Encuestum", "IdEncuestaNavigation")
                        .WithMany("DocumentoEvidencia")
                        .HasForeignKey("IdEncuesta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Documento__id_en__6754599E");

                    b.HasOne("CompetitividadPymes.Models.Domain.Factor", "IdFactorNavigation")
                        .WithMany("DocumentoEvidencia")
                        .HasForeignKey("IdFactor")
                        .HasConstraintName("FK__Documento__id_fa__68487DD7");

                    b.Navigation("IdEncuestaNavigation");

                    b.Navigation("IdFactorNavigation");
                });

            modelBuilder.Entity("CompetitividadPymes.Models.Domain.Encuestum", b =>
                {
                    b.HasOne("CompetitividadPymes.Models.Domain.CaracterizacionEmpresa", "IdCarEmpresaNavigation")
                        .WithMany("Encuesta")
                        .HasForeignKey("IdCarEmpresa")
                        .IsRequired()
                        .HasConstraintName("FK_Encuesta_Caracterizacion_Empresa");

                    b.HasOne("CompetitividadPymes.Models.Domain.CaracterizacionUsuario", "IdCarUsuarioNavigation")
                        .WithMany("Encuesta")
                        .HasForeignKey("IdCarUsuario")
                        .IsRequired()
                        .HasConstraintName("FK_Encuesta_Caracterizacion_Usuario");

                    b.HasOne("CompetitividadPymes.Models.Domain.Empresa", "IdEmpresaNavigation")
                        .WithMany("Encuesta")
                        .HasForeignKey("IdEmpresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Encuesta__id_emp__5629CD9C");

                    b.Navigation("IdCarEmpresaNavigation");

                    b.Navigation("IdCarUsuarioNavigation");

                    b.Navigation("IdEmpresaNavigation");
                });

            modelBuilder.Entity("CompetitividadPymes.Models.Domain.OrdenPago", b =>
                {
                    b.HasOne("CompetitividadPymes.Models.Domain.Empresa", "IdEmpresaNavigation")
                        .WithMany("OrdenPagos")
                        .HasForeignKey("IdEmpresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Orden_Pag__id_em__49C3F6B7");

                    b.HasOne("CompetitividadPymes.Models.Domain.Plane", "IdPlanNavigation")
                        .WithMany("OrdenPagos")
                        .HasForeignKey("IdPlan")
                        .IsRequired()
                        .HasConstraintName("FK_Orden_Pago_Plane");

                    b.Navigation("IdEmpresaNavigation");

                    b.Navigation("IdPlanNavigation");
                });

            modelBuilder.Entity("CompetitividadPymes.Models.Domain.Preguntum", b =>
                {
                    b.HasOne("CompetitividadPymes.Models.Domain.Variable", "IdVariableNavigation")
                        .WithMany("Pregunta")
                        .HasForeignKey("IdVariable")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Pregunta__id_var__5FB337D6");

                    b.Navigation("IdVariableNavigation");
                });

            modelBuilder.Entity("CompetitividadPymes.Models.Domain.Respuestum", b =>
                {
                    b.HasOne("CompetitividadPymes.Models.Domain.Encuestum", "IdEncuestaNavigation")
                        .WithMany("Respuesta")
                        .HasForeignKey("IdEncuesta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Respuesta__id_en__628FA481");

                    b.HasOne("CompetitividadPymes.Models.Domain.Preguntum", "IdPreguntaNavigation")
                        .WithMany("Respuesta")
                        .HasForeignKey("IdPregunta")
                        .HasConstraintName("FK_Respuesta_Pregunta1");

                    b.Navigation("IdEncuestaNavigation");

                    b.Navigation("IdPreguntaNavigation");
                });

            modelBuilder.Entity("CompetitividadPymes.Models.Domain.ResultadoFactor", b =>
                {
                    b.HasOne("CompetitividadPymes.Models.Domain.Encuestum", "IdEncuestaNavigation")
                        .WithMany("ResultadoFactors")
                        .HasForeignKey("IdEncuesta")
                        .IsRequired()
                        .HasConstraintName("FK__Resultado__IdEnc__3587F3E0");

                    b.HasOne("CompetitividadPymes.Models.Domain.Factor", "IdFactorNavigation")
                        .WithMany("ResultadoFactors")
                        .HasForeignKey("IdFactor")
                        .IsRequired()
                        .HasConstraintName("FK__Resultado__IdFac__367C1819");

                    b.Navigation("IdEncuestaNavigation");

                    b.Navigation("IdFactorNavigation");
                });

            modelBuilder.Entity("CompetitividadPymes.Models.Domain.ResultadoVariable", b =>
                {
                    b.HasOne("CompetitividadPymes.Models.Domain.Encuestum", "IdEncuestaNavigation")
                        .WithMany("ResultadoVariables")
                        .HasForeignKey("IdEncuesta")
                        .IsRequired()
                        .HasConstraintName("FK__Resultado__IdEnc__2DE6D218");

                    b.HasOne("CompetitividadPymes.Models.Domain.Variable", "IdVariableNavigation")
                        .WithMany("ResultadoVariables")
                        .HasForeignKey("IdVariable")
                        .IsRequired()
                        .HasConstraintName("FK__Resultado__IdVar__2EDAF651");

                    b.Navigation("IdEncuestaNavigation");

                    b.Navigation("IdVariableNavigation");
                });

            modelBuilder.Entity("CompetitividadPymes.Models.Domain.Suscripcion", b =>
                {
                    b.HasOne("CompetitividadPymes.Models.Domain.Empresa", "IdEmpresaNavigation")
                        .WithMany("Suscripcions")
                        .HasForeignKey("IdEmpresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Suscripci__id_em__5070F446");

                    b.HasOne("CompetitividadPymes.Models.Domain.OrdenPago", "IdOrdenPagoNavigation")
                        .WithMany("Suscripcions")
                        .HasForeignKey("IdOrdenPago")
                        .HasConstraintName("FK__Suscripci__id_or__534D60F1");

                    b.HasOne("CompetitividadPymes.Models.Domain.Plane", "IdPlanNavigation")
                        .WithMany("Suscripcions")
                        .HasForeignKey("IdPlan")
                        .HasConstraintName("FK__Suscripci__id_pl__5165187F");

                    b.Navigation("IdEmpresaNavigation");

                    b.Navigation("IdOrdenPagoNavigation");

                    b.Navigation("IdPlanNavigation");
                });

            modelBuilder.Entity("CompetitividadPymes.Models.Domain.Usuario", b =>
                {
                    b.HasOne("CompetitividadPymes.Models.Domain.Empresa", "IdEmpresaNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdEmpresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Usuario__id_empr__3E52440B");

                    b.HasOne("CompetitividadPymes.Models.Domain.Rol", "IdRolNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRol")
                        .IsRequired()
                        .HasConstraintName("FK__Usuario__id_rol__412EB0B6");

                    b.Navigation("IdEmpresaNavigation");

                    b.Navigation("IdRolNavigation");
                });

            modelBuilder.Entity("CompetitividadPymes.Models.Domain.Variable", b =>
                {
                    b.HasOne("CompetitividadPymes.Models.Domain.Factor", "IdFactorNavigation")
                        .WithMany("Variables")
                        .HasForeignKey("IdFactor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Variable__id_fac__5CD6CB2B");

                    b.Navigation("IdFactorNavigation");
                });

            modelBuilder.Entity("PermisoFactor", b =>
                {
                    b.HasOne("CompetitividadPymes.Models.Domain.Factor", null)
                        .WithMany()
                        .HasForeignKey("IdFactor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Permiso_F__id_fa__6D0D32F4");

                    b.HasOne("CompetitividadPymes.Models.Domain.Rol", null)
                        .WithMany()
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Permiso_F__id_ro__6C190EBB");
                });

            modelBuilder.Entity("PermisoRol", b =>
                {
                    b.HasOne("CompetitividadPymes.Models.Domain.Permiso", null)
                        .WithMany()
                        .HasForeignKey("IdPermiso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Permiso_R__id_pe__46E78A0C");

                    b.HasOne("CompetitividadPymes.Models.Domain.Rol", null)
                        .WithMany()
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Permiso_R__id_ro__45F365D3");
                });

            modelBuilder.Entity("CompetitividadPymes.Models.Domain.CaracterizacionEmpresa", b =>
                {
                    b.Navigation("Encuesta");
                });

            modelBuilder.Entity("CompetitividadPymes.Models.Domain.CaracterizacionUsuario", b =>
                {
                    b.Navigation("Encuesta");
                });

            modelBuilder.Entity("CompetitividadPymes.Models.Domain.Empresa", b =>
                {
                    b.Navigation("CaracterizacionEmpresa");

                    b.Navigation("CaracterizacionUsuario");

                    b.Navigation("Encuesta");

                    b.Navigation("OrdenPagos");

                    b.Navigation("Suscripcions");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("CompetitividadPymes.Models.Domain.Encuestum", b =>
                {
                    b.Navigation("DocumentoEvidencia");

                    b.Navigation("Respuesta");

                    b.Navigation("ResultadoFactors");

                    b.Navigation("ResultadoVariables");
                });

            modelBuilder.Entity("CompetitividadPymes.Models.Domain.Factor", b =>
                {
                    b.Navigation("DocumentoEvidencia");

                    b.Navigation("ResultadoFactors");

                    b.Navigation("Variables");
                });

            modelBuilder.Entity("CompetitividadPymes.Models.Domain.OrdenPago", b =>
                {
                    b.Navigation("Suscripcions");
                });

            modelBuilder.Entity("CompetitividadPymes.Models.Domain.Plane", b =>
                {
                    b.Navigation("OrdenPagos");

                    b.Navigation("Suscripcions");
                });

            modelBuilder.Entity("CompetitividadPymes.Models.Domain.Preguntum", b =>
                {
                    b.Navigation("Respuesta");
                });

            modelBuilder.Entity("CompetitividadPymes.Models.Domain.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("CompetitividadPymes.Models.Domain.Variable", b =>
                {
                    b.Navigation("Pregunta");

                    b.Navigation("ResultadoVariables");
                });
#pragma warning restore 612, 618
        }
    }
}
